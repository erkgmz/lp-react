// WEBPACK - explicit import required for access to variables
@import 'config';
@import "normalize.css/normalize.css";
@import url('https://fonts.googleapis.com/css?family=Roboto+Slab:400,700|Roboto:300,400');

* {
  box-sizing: border-box;
}

html {
  font-size: $root-font-size;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  color: $theme-text;
  overflow: hidden;
}

html,
body {
  height: 100%;
}

body {
  background-color: $theme-light;
  overflow: auto;
}

header {
  background-color: $theme-dark;
}

header,
article {
  padding: 0 1rem;
}

nav {
  background-color: $theme-medium;
}

/*
 * NOTE:
 *  Since the header and navigation are fixed at the top & bottom, respectively, we will not treat them as
 *  flex items. We wanted to provide a native experience and did not want to use the hamburger button on mobile.
 *  Currently, flexbox does not support absolutely positioned elements.
 *  http://stackoverflow.com/questions/29036231/how-can-i-have-a-position-fixed-behaviour-for-a-flexbox-sized-element
 *  Because of this, we will set the height of the .wrapper, set a column layout on .wrapper since the
 *   view will not be absolutely positioned, and leverage flexbox to vertically center our content!
 */

.wrapper {
  min-height: 100%;
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;

  h1 {
    font-size: $headline;
  }

  h2 {
    font-size: $subheader;
  }

  h1,
  h2,
  h3,
  h4 {
    font-family: 'Roboto Slab', serif;
    margin: 0;
  }

  h2,
  h3,
  h4 {
    font-weight: 400;
  }

  p,
  a {
    line-height: 1.7rem;
    font-family: 'Roboto', sans-serif;
  }

  a {
    text-decoration: none;
    cursor: pointer;
    color: $theme-text;
  }

  p,
  a,
  input,
  textarea {
    font-size: $font-size-sm;
  }

  li {
    list-style: none;
  }
}
